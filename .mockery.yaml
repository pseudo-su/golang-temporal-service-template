with-expecter: true
inpackage: true
dir: "{{.InterfaceDir}}"
outpkg: "{{.PackageName}}"
replace-type:
  # Temporal client
  - go.temporal.io/sdk/internal.StartWorkflowOptions=client:go.temporal.io/sdk/client.StartWorkflowOptions
  - go.temporal.io/sdk/internal.WorkflowRun=client:go.temporal.io/sdk/client.WorkflowRun
  - go.temporal.io/sdk/internal.CheckHealthRequest=client:go.temporal.io/sdk/client.CheckHealthRequest
  - go.temporal.io/sdk/internal.CheckHealthResponse=client:go.temporal.io/sdk/client.CheckHealthResponse
  - go.temporal.io/sdk/internal.GetWorkerBuildIdCompatibilityOptions=client:go.temporal.io/sdk/client.GetWorkerBuildIdCompatibilityOptions
  - go.temporal.io/sdk/internal.WorkerBuildIDVersionSets=client:go.temporal.io/sdk/client.WorkerBuildIDVersionSets
  - go.temporal.io/sdk/internal.WorkflowRunGetOptions=client:go.temporal.io/sdk/client.WorkflowRunGetOptions
  - go.temporal.io/sdk/internal.WorkerTaskReachability=client:go.temporal.io/sdk/client.WorkerTaskReachability
  - go.temporal.io/sdk/internal.GetWorkflowUpdateHandleOptions=client:go.temporal.io/sdk/client.GetWorkflowUpdateHandleOptions
  - go.temporal.io/sdk/internal.WorkflowUpdateHandle=client:go.temporal.io/sdk/client.WorkflowUpdateHandle
  - go.temporal.io/sdk/internal.UpdateWorkflowWithOptionsRequest=client:go.temporal.io/sdk/client.UpdateWorkflowWithOptionsRequest
  - go.temporal.io/sdk/internal.GetWorkerTaskReachabilityOptions=client:go.temporal.io/sdk/client.GetWorkerTaskReachabilityOptions
  - go.temporal.io/sdk/internal.HistoryEventIterator=client:go.temporal.io/sdk/client.HistoryEventIterator
  - go.temporal.io/sdk/internal.QueryWorkflowWithOptionsRequest=client:go.temporal.io/sdk/client.QueryWorkflowWithOptionsRequest
  - go.temporal.io/sdk/internal.QueryWorkflowWithOptionsResponse=client:go.temporal.io/sdk/client.QueryWorkflowWithOptionsResponse
  - go.temporal.io/sdk/internal.ScheduleClient=client:go.temporal.io/sdk/client.ScheduleClient
  - go.temporal.io/sdk/internal.UpdateWorkerBuildIdCompatibilityOptions=client:go.temporal.io/sdk/client.UpdateWorkerBuildIdCompatibilityOptions
  - go.temporal.io/sdk/internal.DescribeTaskQueueEnhancedOptions=client:go.temporal.io/sdk/client.DescribeTaskQueueEnhancedOptions
  - go.temporal.io/sdk/internal.GetWorkerVersioningOptions=client:go.temporal.io/sdk/client.GetWorkerVersioningOptions
  - go.temporal.io/sdk/internal.TaskQueueDescription=client:go.temporal.io/sdk/client.TaskQueueDescription
  - go.temporal.io/sdk/internal.UpdateWorkerVersioningRulesOptions=client:go.temporal.io/sdk/client.UpdateWorkerVersioningRulesOptions
  - go.temporal.io/sdk/internal.UpdateWorkflowOptions=client:go.temporal.io/sdk/client.UpdateWorkflowOptions
  - go.temporal.io/sdk/internal.WorkerVersioningRules=client:go.temporal.io/sdk/client.WorkerVersioningRules
  # Temporal workflow
  - go.temporal.io/sdk/internal.Context=workflow:go.temporal.io/sdk/workflow.Context
  - go.temporal.io/sdk/internal.ReplayWorkflowHistoryOptions=workflow:go.temporal.io/sdk/worker.ReplayWorkflowHistoryOptions
  - go.temporal.io/sdk/internal.WorkflowExecution=workflow:go.temporal.io/sdk/workflow.Execution
  - go.temporal.io/sdk/internal.RegisterWorkflowOptions=workflow:go.temporal.io/sdk/workflow.RegisterOptions
packages:
  github.com/pseudo-su/golang-temporal-service-template/modules/worker/pkg/workflowclient:
    interfaces:
      WorkflowClientInterface: {}

  go.temporal.io/sdk/converter:
    config:
      dir: "modules/testing-tools/vendormocks"
    interfaces:
      EncodedValue:
        config:
          inpackage: false
          outpkg: "vendormocks"
          mockname: MockTemporalEncodedValue
          filename: mock_TemporalEncodedValue.go

  go.temporal.io/sdk/internal:
    config:
      dir: "modules/testing-tools/vendormocks"
    interfaces:
      WorkflowRun:
        config:
          inpackage: false
          outpkg: "vendormocks"
          mockname: MockTemporalWorkflowRun
          filename: mock_TemporalWorkflowRun.go

  go.temporal.io/sdk/client:
    config:
      dir: "modules/testing-tools/vendormocks"
    interfaces:
      Client:
        config:
          inpackage: false
          outpkg: "vendormocks"
          mockname: MockTemporalClient
          filename: mock_TemporalClient.go

  google.golang.org/grpc/health/grpc_health_v1:
    config:
      dir: "modules/testing-tools/vendormocks"
    interfaces:
      HealthClient:
        config:
          inpackage: false
          outpkg: "vendormocks"
          mockname: MockHealthClient
          filename: mock_grpc_health_client.go
