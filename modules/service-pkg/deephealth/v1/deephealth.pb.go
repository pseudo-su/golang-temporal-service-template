// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: deephealth/v1/deephealth.proto

package deephealth_v1

import (
	reflect "reflect"
	sync "sync"

	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Possible health state.
type DeepHealthCheckResponse_HealthState int32

const (
	// health state unspecified
	DeepHealthCheckResponse_HEALTH_STATE_UNSPECIFIED DeepHealthCheckResponse_HealthState = 0
	// all downstream responses have healthy responses
	DeepHealthCheckResponse_HEALTH_STATE_OK DeepHealthCheckResponse_HealthState = 1
	// some / all downstream responses have unhealthy responses
	DeepHealthCheckResponse_HEALTH_STATE_FAIL DeepHealthCheckResponse_HealthState = 2
)

// Enum value maps for DeepHealthCheckResponse_HealthState.
var (
	DeepHealthCheckResponse_HealthState_name = map[int32]string{
		0: "HEALTH_STATE_UNSPECIFIED",
		1: "HEALTH_STATE_OK",
		2: "HEALTH_STATE_FAIL",
	}
	DeepHealthCheckResponse_HealthState_value = map[string]int32{
		"HEALTH_STATE_UNSPECIFIED": 0,
		"HEALTH_STATE_OK":          1,
		"HEALTH_STATE_FAIL":        2,
	}
)

func (x DeepHealthCheckResponse_HealthState) Enum() *DeepHealthCheckResponse_HealthState {
	p := new(DeepHealthCheckResponse_HealthState)
	*p = x
	return p
}

func (x DeepHealthCheckResponse_HealthState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeepHealthCheckResponse_HealthState) Descriptor() protoreflect.EnumDescriptor {
	return file_deephealth_v1_deephealth_proto_enumTypes[0].Descriptor()
}

func (DeepHealthCheckResponse_HealthState) Type() protoreflect.EnumType {
	return &file_deephealth_v1_deephealth_proto_enumTypes[0]
}

func (x DeepHealthCheckResponse_HealthState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeepHealthCheckResponse_HealthState.Descriptor instead.
func (DeepHealthCheckResponse_HealthState) EnumDescriptor() ([]byte, []int) {
	return file_deephealth_v1_deephealth_proto_rawDescGZIP(), []int{1, 0}
}

// Possible service modes.
type Service_ServiceMode int32

const (
	// service mode unspecified
	Service_SERVICE_MODE_UNSPECIFIED Service_ServiceMode = 0
	// currently inactive, won't form part of the overall health check response
	Service_SERVICE_MODE_DISABLED Service_ServiceMode = 1
	// running off of stubbed servers
	Service_SERVICE_MODE_STUB Service_ServiceMode = 2
	// running live within environments
	Service_SERVICE_MODE_LIVE Service_ServiceMode = 3
)

// Enum value maps for Service_ServiceMode.
var (
	Service_ServiceMode_name = map[int32]string{
		0: "SERVICE_MODE_UNSPECIFIED",
		1: "SERVICE_MODE_DISABLED",
		2: "SERVICE_MODE_STUB",
		3: "SERVICE_MODE_LIVE",
	}
	Service_ServiceMode_value = map[string]int32{
		"SERVICE_MODE_UNSPECIFIED": 0,
		"SERVICE_MODE_DISABLED":    1,
		"SERVICE_MODE_STUB":        2,
		"SERVICE_MODE_LIVE":        3,
	}
)

func (x Service_ServiceMode) Enum() *Service_ServiceMode {
	p := new(Service_ServiceMode)
	*p = x
	return p
}

func (x Service_ServiceMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Service_ServiceMode) Descriptor() protoreflect.EnumDescriptor {
	return file_deephealth_v1_deephealth_proto_enumTypes[1].Descriptor()
}

func (Service_ServiceMode) Type() protoreflect.EnumType {
	return &file_deephealth_v1_deephealth_proto_enumTypes[1]
}

func (x Service_ServiceMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Service_ServiceMode.Descriptor instead.
func (Service_ServiceMode) EnumDescriptor() ([]byte, []int) {
	return file_deephealth_v1_deephealth_proto_rawDescGZIP(), []int{2, 0}
}

// Possible service health states.
type ServiceCheck_HealthState int32

const (
	// health service state unspecified
	ServiceCheck_HEALTH_STATE_UNSPECIFIED ServiceCheck_HealthState = 0
	// health service unimplemented
	ServiceCheck_HEALTH_STATE_UNIMPLEMENTED ServiceCheck_HealthState = 1
	// service up and running
	ServiceCheck_HEALTH_STATE_GOOD ServiceCheck_HealthState = 2
	// service unavailable
	ServiceCheck_HEALTH_STATE_BAD ServiceCheck_HealthState = 3
)

// Enum value maps for ServiceCheck_HealthState.
var (
	ServiceCheck_HealthState_name = map[int32]string{
		0: "HEALTH_STATE_UNSPECIFIED",
		1: "HEALTH_STATE_UNIMPLEMENTED",
		2: "HEALTH_STATE_GOOD",
		3: "HEALTH_STATE_BAD",
	}
	ServiceCheck_HealthState_value = map[string]int32{
		"HEALTH_STATE_UNSPECIFIED":   0,
		"HEALTH_STATE_UNIMPLEMENTED": 1,
		"HEALTH_STATE_GOOD":          2,
		"HEALTH_STATE_BAD":           3,
	}
)

func (x ServiceCheck_HealthState) Enum() *ServiceCheck_HealthState {
	p := new(ServiceCheck_HealthState)
	*p = x
	return p
}

func (x ServiceCheck_HealthState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceCheck_HealthState) Descriptor() protoreflect.EnumDescriptor {
	return file_deephealth_v1_deephealth_proto_enumTypes[2].Descriptor()
}

func (ServiceCheck_HealthState) Type() protoreflect.EnumType {
	return &file_deephealth_v1_deephealth_proto_enumTypes[2]
}

func (x ServiceCheck_HealthState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceCheck_HealthState.Descriptor instead.
func (ServiceCheck_HealthState) EnumDescriptor() ([]byte, []int) {
	return file_deephealth_v1_deephealth_proto_rawDescGZIP(), []int{3, 0}
}

// Possible initiated services.
type ServiceCheck_InitiatedFromService int32

const (
	// initiated from unspecified
	ServiceCheck_INITIATED_FROM_SERVICE_UNSPECIFIED ServiceCheck_InitiatedFromService = 0
	// initiated from frontdoor service
	ServiceCheck_INITIATED_FROM_SERVICE_FRONTDOOR ServiceCheck_InitiatedFromService = 1
	// initiated from workflow
	ServiceCheck_INITIATED_FROM_SERVICE_WORKER ServiceCheck_InitiatedFromService = 2
)

// Enum value maps for ServiceCheck_InitiatedFromService.
var (
	ServiceCheck_InitiatedFromService_name = map[int32]string{
		0: "INITIATED_FROM_SERVICE_UNSPECIFIED",
		1: "INITIATED_FROM_SERVICE_FRONTDOOR",
		2: "INITIATED_FROM_SERVICE_WORKER",
	}
	ServiceCheck_InitiatedFromService_value = map[string]int32{
		"INITIATED_FROM_SERVICE_UNSPECIFIED": 0,
		"INITIATED_FROM_SERVICE_FRONTDOOR":   1,
		"INITIATED_FROM_SERVICE_WORKER":      2,
	}
)

func (x ServiceCheck_InitiatedFromService) Enum() *ServiceCheck_InitiatedFromService {
	p := new(ServiceCheck_InitiatedFromService)
	*p = x
	return p
}

func (x ServiceCheck_InitiatedFromService) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceCheck_InitiatedFromService) Descriptor() protoreflect.EnumDescriptor {
	return file_deephealth_v1_deephealth_proto_enumTypes[3].Descriptor()
}

func (ServiceCheck_InitiatedFromService) Type() protoreflect.EnumType {
	return &file_deephealth_v1_deephealth_proto_enumTypes[3]
}

func (x ServiceCheck_InitiatedFromService) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceCheck_InitiatedFromService.Descriptor instead.
func (ServiceCheck_InitiatedFromService) EnumDescriptor() ([]byte, []int) {
	return file_deephealth_v1_deephealth_proto_rawDescGZIP(), []int{3, 1}
}

// The request message containing the user's name.
type DeepHealthCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// [Optional] consumer identifier
	// (--
	//
	//	api-linter: core::0140::prepositions=disabled
	//
	// --)
	TriggeredBy string `protobuf:"bytes,1,opt,name=triggered_by,json=triggeredBy,proto3" json:"triggered_by,omitempty"`
}

func (x *DeepHealthCheckRequest) Reset() {
	*x = DeepHealthCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deephealth_v1_deephealth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeepHealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeepHealthCheckRequest) ProtoMessage() {}

func (x *DeepHealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deephealth_v1_deephealth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeepHealthCheckRequest.ProtoReflect.Descriptor instead.
func (*DeepHealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_deephealth_v1_deephealth_proto_rawDescGZIP(), []int{0}
}

func (x *DeepHealthCheckRequest) GetTriggeredBy() string {
	if x != nil {
		return x.TriggeredBy
	}
	return ""
}

// The response message containing the greetings
type DeepHealthCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// state of the service
	HealthState DeepHealthCheckResponse_HealthState `protobuf:"varint,1,opt,name=health_state,json=healthState,proto3,enum=deephealth.v1.DeepHealthCheckResponse_HealthState" json:"health_state,omitempty"`
	// status of the service
	HttpStatus int32 `protobuf:"varint,2,opt,name=http_status,json=httpStatus,proto3" json:"http_status,omitempty"`
	// time health check call is made
	GeneratedTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=generated_time,json=generatedTime,proto3" json:"generated_time,omitempty"`
	// various downstream services that form part of the overall deep health check
	Services []*Service `protobuf:"bytes,4,rep,name=services,proto3" json:"services,omitempty"`
}

func (x *DeepHealthCheckResponse) Reset() {
	*x = DeepHealthCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deephealth_v1_deephealth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeepHealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeepHealthCheckResponse) ProtoMessage() {}

func (x *DeepHealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deephealth_v1_deephealth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeepHealthCheckResponse.ProtoReflect.Descriptor instead.
func (*DeepHealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_deephealth_v1_deephealth_proto_rawDescGZIP(), []int{1}
}

func (x *DeepHealthCheckResponse) GetHealthState() DeepHealthCheckResponse_HealthState {
	if x != nil {
		return x.HealthState
	}
	return DeepHealthCheckResponse_HEALTH_STATE_UNSPECIFIED
}

func (x *DeepHealthCheckResponse) GetHttpStatus() int32 {
	if x != nil {
		return x.HttpStatus
	}
	return 0
}

func (x *DeepHealthCheckResponse) GetGeneratedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.GeneratedTime
	}
	return nil
}

func (x *DeepHealthCheckResponse) GetServices() []*Service {
	if x != nil {
		return x.Services
	}
	return nil
}

// response from deep health service check, will include health checks from downstream services
type Service struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// desc of the service
	// (--
	//
	//	api-linter: core::0122::name-suffix=disabled
	//
	// --)
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// mode of the service
	ServiceMode Service_ServiceMode `protobuf:"varint,2,opt,name=service_mode,json=serviceMode,proto3,enum=deephealth.v1.Service_ServiceMode" json:"service_mode,omitempty"`
	Checks      []*ServiceCheck     `protobuf:"bytes,3,rep,name=checks,proto3" json:"checks,omitempty"`
}

func (x *Service) Reset() {
	*x = Service{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deephealth_v1_deephealth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Service) ProtoMessage() {}

func (x *Service) ProtoReflect() protoreflect.Message {
	mi := &file_deephealth_v1_deephealth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Service.ProtoReflect.Descriptor instead.
func (*Service) Descriptor() ([]byte, []int) {
	return file_deephealth_v1_deephealth_proto_rawDescGZIP(), []int{2}
}

func (x *Service) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *Service) GetServiceMode() Service_ServiceMode {
	if x != nil {
		return x.ServiceMode
	}
	return Service_SERVICE_MODE_UNSPECIFIED
}

func (x *Service) GetChecks() []*ServiceCheck {
	if x != nil {
		return x.Checks
	}
	return nil
}

// information about a single health check call against a service, eg. hitting a jwks endpoint
type ServiceCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// description
	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	// state of the service
	HealthState ServiceCheck_HealthState `protobuf:"varint,2,opt,name=health_state,json=healthState,proto3,enum=deephealth.v1.ServiceCheck_HealthState" json:"health_state,omitempty"`
	// initiated from service
	// (--
	//
	//	api-linter: core::0140::prepositions=disabled
	//
	// --)
	InitiatedFrom ServiceCheck_InitiatedFromService `protobuf:"varint,3,opt,name=initiated_from,json=initiatedFrom,proto3,enum=deephealth.v1.ServiceCheck_InitiatedFromService" json:"initiated_from,omitempty"`
	// Status returned by the downstream service check.
	//
	// Types that are assignable to Status:
	//
	//	*ServiceCheck_HttpStatus
	//	*ServiceCheck_GrpcStatus
	Status isServiceCheck_Status `protobuf_oneof:"status"`
}

func (x *ServiceCheck) Reset() {
	*x = ServiceCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deephealth_v1_deephealth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceCheck) ProtoMessage() {}

func (x *ServiceCheck) ProtoReflect() protoreflect.Message {
	mi := &file_deephealth_v1_deephealth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceCheck.ProtoReflect.Descriptor instead.
func (*ServiceCheck) Descriptor() ([]byte, []int) {
	return file_deephealth_v1_deephealth_proto_rawDescGZIP(), []int{3}
}

func (x *ServiceCheck) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ServiceCheck) GetHealthState() ServiceCheck_HealthState {
	if x != nil {
		return x.HealthState
	}
	return ServiceCheck_HEALTH_STATE_UNSPECIFIED
}

func (x *ServiceCheck) GetInitiatedFrom() ServiceCheck_InitiatedFromService {
	if x != nil {
		return x.InitiatedFrom
	}
	return ServiceCheck_INITIATED_FROM_SERVICE_UNSPECIFIED
}

func (m *ServiceCheck) GetStatus() isServiceCheck_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (x *ServiceCheck) GetHttpStatus() int32 {
	if x, ok := x.GetStatus().(*ServiceCheck_HttpStatus); ok {
		return x.HttpStatus
	}
	return 0
}

func (x *ServiceCheck) GetGrpcStatus() int32 {
	if x, ok := x.GetStatus().(*ServiceCheck_GrpcStatus); ok {
		return x.GrpcStatus
	}
	return 0
}

type isServiceCheck_Status interface {
	isServiceCheck_Status()
}

type ServiceCheck_HttpStatus struct {
	// the downstream call was made over HTTP, and this is the response status code.
	HttpStatus int32 `protobuf:"varint,4,opt,name=http_status,json=httpStatus,proto3,oneof"`
}

type ServiceCheck_GrpcStatus struct {
	// the downstream call was made over GRPC, and this is the response status code.
	GrpcStatus int32 `protobuf:"varint,5,opt,name=grpc_status,json=grpcStatus,proto3,oneof"`
}

func (*ServiceCheck_HttpStatus) isServiceCheck_Status() {}

func (*ServiceCheck_GrpcStatus) isServiceCheck_Status() {}

var File_deephealth_v1_deephealth_proto protoreflect.FileDescriptor

var file_deephealth_v1_deephealth_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x64, 0x65, 0x65, 0x70, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x65, 0x65, 0x70, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0d, 0x64, 0x65, 0x65, 0x70, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x41, 0x0a, 0x16, 0x44, 0x65, 0x65, 0x70, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0c, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x04, 0xe2, 0x41, 0x01, 0x01, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x65, 0x64,
	0x42, 0x79, 0x22, 0xe7, 0x02, 0x0a, 0x17, 0x44, 0x65, 0x65, 0x70, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b,
	0x0a, 0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x65, 0x70, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x03, 0x52, 0x0b,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x68,
	0x74, 0x74, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x68, 0x74, 0x74, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x41, 0x0a, 0x0e,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x32, 0x0a, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x22, 0x57, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x13, 0x0a, 0x0f, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x02, 0x22, 0x9e, 0x02, 0x0a,
	0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x22, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x06, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x22, 0x74, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43,
	0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f,
	0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12,
	0x15, 0x0a, 0x11, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f,
	0x53, 0x54, 0x55, 0x42, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43,
	0x45, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x4c, 0x49, 0x56, 0x45, 0x10, 0x03, 0x22, 0xb5, 0x04,
	0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x50, 0x0a, 0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42,
	0x04, 0xe2, 0x41, 0x01, 0x03, 0x52, 0x0b, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x5d, 0x0a, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x64, 0x65, 0x65,
	0x70, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65,
	0x64, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x04, 0xe2, 0x41,
	0x01, 0x03, 0x52, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x46, 0x72, 0x6f,
	0x6d, 0x12, 0x21, 0x0a, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0a, 0x68, 0x74, 0x74, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0b, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x72, 0x70,
	0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x78, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x47, 0x4f, 0x4f, 0x44, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x48,
	0x45, 0x41, 0x4c, 0x54, 0x48, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x42, 0x41, 0x44, 0x10,
	0x03, 0x22, 0x87, 0x01, 0x0a, 0x14, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x46,
	0x72, 0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x22, 0x49, 0x4e,
	0x49, 0x54, 0x49, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x53, 0x45, 0x52,
	0x56, 0x49, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x54, 0x45, 0x44, 0x5f,
	0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x46, 0x52, 0x4f,
	0x4e, 0x54, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x49, 0x4e, 0x49, 0x54,
	0x49, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49,
	0x43, 0x45, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x45, 0x52, 0x10, 0x02, 0x42, 0x08, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x7d, 0x0a, 0x0a, 0x44, 0x65, 0x65, 0x70, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x12, 0x6f, 0x0a, 0x05, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x25, 0x2e, 0x64,
	0x65, 0x65, 0x70, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x65,
	0x70, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x65, 0x70, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2f,
	0x64, 0x65, 0x65, 0x70, 0x42, 0xbf, 0x01, 0x0a, 0x43, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x70, 0x73, 0x65, 0x75, 0x64, 0x6f, 0x2d, 0x73, 0x75, 0x2e, 0x67, 0x6f,
	0x6c, 0x61, 0x6e, 0x67, 0x2d, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x64,
	0x65, 0x65, 0x70, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x42, 0x0f, 0x44, 0x65,
	0x65, 0x70, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x65, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x73, 0x65, 0x75,
	0x64, 0x6f, 0x2d, 0x73, 0x75, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2d, 0x74, 0x65, 0x6d,
	0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x70, 0x6b, 0x67, 0x2f, 0x64, 0x65, 0x65, 0x70, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x3b, 0x64, 0x65, 0x65, 0x70, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x5f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_deephealth_v1_deephealth_proto_rawDescOnce sync.Once
	file_deephealth_v1_deephealth_proto_rawDescData = file_deephealth_v1_deephealth_proto_rawDesc
)

func file_deephealth_v1_deephealth_proto_rawDescGZIP() []byte {
	file_deephealth_v1_deephealth_proto_rawDescOnce.Do(func() {
		file_deephealth_v1_deephealth_proto_rawDescData = protoimpl.X.CompressGZIP(file_deephealth_v1_deephealth_proto_rawDescData)
	})
	return file_deephealth_v1_deephealth_proto_rawDescData
}

var file_deephealth_v1_deephealth_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_deephealth_v1_deephealth_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_deephealth_v1_deephealth_proto_goTypes = []interface{}{
	(DeepHealthCheckResponse_HealthState)(0), // 0: deephealth.v1.DeepHealthCheckResponse.HealthState
	(Service_ServiceMode)(0),                 // 1: deephealth.v1.Service.ServiceMode
	(ServiceCheck_HealthState)(0),            // 2: deephealth.v1.ServiceCheck.HealthState
	(ServiceCheck_InitiatedFromService)(0),   // 3: deephealth.v1.ServiceCheck.InitiatedFromService
	(*DeepHealthCheckRequest)(nil),           // 4: deephealth.v1.DeepHealthCheckRequest
	(*DeepHealthCheckResponse)(nil),          // 5: deephealth.v1.DeepHealthCheckResponse
	(*Service)(nil),                          // 6: deephealth.v1.Service
	(*ServiceCheck)(nil),                     // 7: deephealth.v1.ServiceCheck
	(*timestamppb.Timestamp)(nil),            // 8: google.protobuf.Timestamp
}
var file_deephealth_v1_deephealth_proto_depIdxs = []int32{
	0, // 0: deephealth.v1.DeepHealthCheckResponse.health_state:type_name -> deephealth.v1.DeepHealthCheckResponse.HealthState
	8, // 1: deephealth.v1.DeepHealthCheckResponse.generated_time:type_name -> google.protobuf.Timestamp
	6, // 2: deephealth.v1.DeepHealthCheckResponse.services:type_name -> deephealth.v1.Service
	1, // 3: deephealth.v1.Service.service_mode:type_name -> deephealth.v1.Service.ServiceMode
	7, // 4: deephealth.v1.Service.checks:type_name -> deephealth.v1.ServiceCheck
	2, // 5: deephealth.v1.ServiceCheck.health_state:type_name -> deephealth.v1.ServiceCheck.HealthState
	3, // 6: deephealth.v1.ServiceCheck.initiated_from:type_name -> deephealth.v1.ServiceCheck.InitiatedFromService
	4, // 7: deephealth.v1.DeepHealth.Check:input_type -> deephealth.v1.DeepHealthCheckRequest
	5, // 8: deephealth.v1.DeepHealth.Check:output_type -> deephealth.v1.DeepHealthCheckResponse
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_deephealth_v1_deephealth_proto_init() }
func file_deephealth_v1_deephealth_proto_init() {
	if File_deephealth_v1_deephealth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_deephealth_v1_deephealth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeepHealthCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deephealth_v1_deephealth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeepHealthCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deephealth_v1_deephealth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Service); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deephealth_v1_deephealth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_deephealth_v1_deephealth_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*ServiceCheck_HttpStatus)(nil),
		(*ServiceCheck_GrpcStatus)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_deephealth_v1_deephealth_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_deephealth_v1_deephealth_proto_goTypes,
		DependencyIndexes: file_deephealth_v1_deephealth_proto_depIdxs,
		EnumInfos:         file_deephealth_v1_deephealth_proto_enumTypes,
		MessageInfos:      file_deephealth_v1_deephealth_proto_msgTypes,
	}.Build()
	File_deephealth_v1_deephealth_proto = out.File
	file_deephealth_v1_deephealth_proto_rawDesc = nil
	file_deephealth_v1_deephealth_proto_goTypes = nil
	file_deephealth_v1_deephealth_proto_depIdxs = nil
}
